---
title: "方法論研究におけるフォルダ構成を考える"
author: "坂本航太"
categories: [博士課程]
date-modified: "2025-07-11"
abstract-title: Abstract
abstract: ""
date: "2025-07-11"
---

# シミュレーション研究におけるフォルダ構成を考える

実データ解析に関するフォルダ構成は、別記事で作成済である。実務と同様の構成で実施したらよい。ここでは、実データを利用することを主眼とせず、特定の統計方法論に基づくシミュレーション研究/方法論研究のフォルダ構造について考える。そして、Rにて自動でフォルダを作成するような標準テンプレートを作成することを目的とする。以下はGeminiに作ってもらったもの。

## シミュレーション研究の強い味方！Rで自動生成する理想のフォルダ構成

こんにちは！研究者の皆さん、日々のシミュレーション研究、お疲れ様です。

シミュレーション研究って、実データ解析とはまた違った難しさがありますよね。特に、**様々なパラメータ設定**、**シナリオごとの結果管理**、そして**いつどのスクリプトを実行したか**といった記録の管理は、研究の再現性や効率に直結する重要な課題です。

「あの時の結果、どのファイルだっけ…？」 「このスクリプト、どのシミュレーション設定で走らせたんだっけ…？」

こんな経験、ありませんか？

今回は、そんな悩みを解決するための「**シミュレーション研究に特化した理想のフォルダ構成**」と、それをRで**自動生成**する便利なテンプレートをご紹介します。Git管理や複雑なドキュメント、さらにはRの初期設定ファイルも一旦置いておいて、まずは研究に集中できるミニマルで効率的な環境をサッと作っちゃいましょう！

### なぜフォルダ構成が重要なのか？

シミュレーション研究では、特に以下の点が管理のポイントになります。

1.  **再現性:** どのスクリプトが、いつ、どの設定で実行され、どんな結果が出たのかが明確であること。

2.  **効率性:** 目的のファイルに素早くアクセスでき、新しいシミュレーションを追加しやすいこと。

3.  **整理整頓:** 膨大になりがちな中間ファイルや結果を体系的に保存できること。

これらを解決するために、以下のようなフォルダ構成をおすすめします。

### これが理想！シミュレーション研究向けフォルダ構成

私たちが提案するフォルダ構成は、研究のワークフローを考慮し、以下のように整理されています。特に、日々の進捗を明確にするために**日付(`YYYYMMDD`)でのフォルダ管理**を取り入れています。フォルダ名の先頭に数字を付けることで、常に意図した順序で表示されるよう工夫しています。

```         
プロジェクトルート/
├── 000_resources/     # 勉強した教材、参考文献、参考資料など
├── 001_data/
│   └── raw/           # シミュレーションの元となる外部データや真のパラメータ設定
├── 002_R/
│   ├── functions/     # シミュレーションの中核となるR関数群
│   └── utils/         # 汎用的なユーティリティR関数
├── 003_output/        # シミュレーション結果の出力ルート
│   └── YYYYMMDD/      # 例: 20250711 (その日のシミュレーション結果を格納)
├── 004_src/           # シミュレーション実行スクリプトのルート
│   └── YYYYMMDD/      # 例: 20250711 (その日に実行したスクリプトを格納)
├── 005_scripts/       # シミュレーション設定やバッチ処理用スクリプト
├── 006_docs/          # 研究ノート、アイデアなど（論文以外のドキュメント）
├── 007_meeting/       # 指導教官との打ち合わせ記録
│   └── YYYYMMDD/      # 例: 20250710 (その日の打ち合わせ資料・議事録など)
├── 008_Paper/         # 論文ドラフトや最終版の図・表、参考文献ファイル
├── renv/              # Rパッケージ管理（renvを使用する場合）
```

### **ポイントはここ！**

-   **`000_resources/` の追加:** 研究の基礎となる教材や参考文献を整理して格納できる場所を設けました。

-   **数字プレフィックス付きフォルダ:** `001_data`, `002_R` のように数字を付与することで、ファイルエクスプローラーやRStudioのファイルペインで常に論理的な順序で表示されます。

-   **`YYYYMMDD` 形式のフォルダ:** `003_output/`、`004_src/`、`007_meeting/` の直下には、その日の作業をまとめるための日付フォルダを作成します。これにより、「あの結果、いつ出したんだっけ？」と迷うことがなくなります。

    -   **例：** `004_src/20250711/` には今日実行したスクリプトを、`003_output/20250711/` には今日得られた結果を保存します。同じ日に複数のシミュレーションを行う場合は、ファイル名で区別すると良いでしょう。

-   **`008_Paper/` フォルダ:** 論文執筆のためのフォルダ。ここにQuartoやLaTeXの原稿ファイル、論文用の最終的な図表などをまとめておけます。

-   **`renv/` で再現性確保:** Rパッケージのバージョン管理ツール `renv` を使うことで、異なる環境でも同じ解析を再現できるようになります。`renv` を使用すると、プロジェクトルートに `.Rprofile` と `renv.lock` ファイルが自動生成されますが、これは `renv` の機能の一部であり、パッケージの再現性確保には不可欠です。

### 各フォルダの役割と使い分けを徹底解説！

それぞれのフォルダには明確な役割があります。適切に使い分けることで、プロジェクト全体が整理され、将来の自分や共同研究者が困ることがなくなります。

#### 000_resources/

-   **目的:** シミュレーション研究を進める上で**参照する全ての資料**を格納する場所です。

-   **内容:** 勉強した教材（PDF、講義ノートなど）、論文のPDF、ウェブサイトのスクリーンショット、コードスニペットのメモ、関連する書籍の目次や章のコピーなど。

-   **使い分け:** プロジェクトの「知識ベース」として活用します。ここにある資料は、シミュレーションの実行や結果とは直接関係ありませんが、研究の背景知識や手法の理解を深めるために不可欠なものです。

#### 001_data/

-   **目的:** シミュレーションの**元となる固定データ**を格納する場所です。

-   **内容:**

    -   `raw/`: 外部から取得した生データや、シミュレーションの「真の値」として設定するパラメータのファイルなど。シミュレーション内で動的に生成されるデータはここには置きません。

-   **使い分け:** シミュレーションの入力となる、変更されない静的なデータを置きます。

#### 002_R/

-   **目的:** **Rの関数ファイル**を格納する場所です。これにより、スクリプト本体がすっきりし、関数を再利用しやすくなります。

-   **内容:**

    -   `functions/`: シミュレーションの中核となる**カスタム関数**を定義したファイル。例えば、特定の分布からデータを生成する関数、開発中の推定量を計算する関数、統計モデルをフィットする関数などです。これらの関数は、`004_src`内の実行スクリプトから呼び出して使います。

    -   `utils/`: シミュレーション結果の集計、プロット作成、結果の整形など、**汎用的に利用するユーティリティ関数**を定義したファイル。特定のシミュレーションに限定されず、複数の研究で使い回せるような関数が該当します。

-   **使い分け:** 長いRスクリプトを機能ごとに分割し、再利用可能な部品として管理します。実行スクリプトはこれらの関数を「呼び出す」だけに留めます。

#### 003_output/

-   **目的:** シミュレーションによって**生成された結果**を保存する場所です。

-   **内容:**

    -   `YYYYMMDD/`: シミュレーションを実行した日付ごとのフォルダ。この中に、その日の実行で得られた結果を保存します。

        -   `results/`: シミュレーションによって得られた**数値結果**（例: 推定量、標準誤差、p値、バイアスなど）を`.rds`ファイルや`.csv`ファイルとして保存します。

        -   `figures/`: 結果を可視化した**グラフや図**を`.png`や`.pdf`形式で保存します。

        -   `tables/`: 結果をまとめた**表**を`.tex`や`.docx`形式で保存します。

-   **使い分け:** シミュレーションの結果として「残すべきもの」は全てここに集約します。日付フォルダにより、いつの結果かが一目でわかります。

#### 004_src/

-   **目的:** **シミュレーションの具体的な実行ロジック**と、それに伴う**結果解析のコード**を格納する場所です。

-   **内容:**

    -   `YYYYMMDD/`: シミュレーションを実行した日付ごとのフォルダ。この中に、その日の特定のシミュレーション実行に関するスクリプトを格納します。

        -   `01_run_simulation.R`: シミュレーションを実際に実行し、データを生成し、`003_output/YYYYMMDD/results/` に保存するスクリプト。

        -   `02_analyze_results.R`: `003_output/YYYYMMDD/results/` に保存された結果を読み込み、解析し、`003_output/YYYYMMDD/figures/` や `003_output/YYYYMMDD/tables/` に保存するスクリプト。

        -   `03_generate_report.R`: シミュレーション結果をまとめた簡易レポートやQuartoドキュメントを生成するスクリプト。

-   **使い分け:** \*\*「このシミュレーション結果を得るために、どのコードを走らせたか？」\*\*という問いに直接答えるコードを置きます。日付フォルダにまとめることで、再現性が飛躍的に向上します。

#### 005_scripts/

-   **目的:** プロジェクト全体をスムーズに進めるための**補助的なスクリプトやユーティリティ**を置く場所です。

-   **内容:**

    -   シミュレーション実行前に必要な環境設定スクリプト（例: パス設定、共通オプション）。

    -   複数のシミュレーションを自動で実行するための**バッチ処理スクリプト**（例: HPC環境でのジョブ投入スクリプト）。

    -   `001_data/raw` にある生データを、シミュレーションで使いやすい形に加工する一度きりの前処理スクリプト。

    -   複数のシミュレーションシナリオで共通して使われるパラメータ設定を定義するスクリプトなど。

-   **使い分け:** \*\*「このプロジェクトを進める上で、どんなツールや設定が必要か？」\*\*という問いに答えるコードを置きます。特定のシミュレーション実行とは独立しており、汎用性が高いコードが該当します。

#### 006_docs/

-   **目的:** 研究に関する**ドキュメント**やアイデア、メモなどを格納する場所です。

-   **内容:** 研究ノート、ブレインストーミングのメモ、学会発表の草案、今後の研究アイデア、関連論文のまとめなど。

-   **使い分け:** `008_Paper/` が論文原稿そのものであるのに対し、こちらは論文に直接ならないような「研究の過程」を示す資料を置きます。

#### 007_meeting/

-   **目的:** 指導教官や共同研究者との**打ち合わせ記録**を保存する場所です。

-   **内容:**

    -   `YYYYMMDD/`: 打ち合わせがあった日付ごとのフォルダ。この中に、議事録、議論のポイント、ToDoリスト、共有資料などを保存します。

-   **使い分け:** 打ち合わせの履歴を時系列で管理することで、以前の議論内容をすぐに確認できます。

#### 008_Paper/

-   **目的:** **論文のドラフト**や、論文に最終的に含める図表のファイル、参考文献ファイルなどを格納する場所です。

-   **内容:** Quarto（.qmd）ファイル、LaTeX（.tex）ファイル、Word（.docx）ファイルなどの論文原稿、論文で使う高品質な図（.pdf, .tiff）、表（.tex, .csv）、参考文献データベース（.bib）など。

-   **使い分け:** シミュレーション結果 (`003_output/`) から論文に直接持っていく最終的な成果物をここに集約します。

### Rで一発作成！フォルダ自動生成テンプレート

この理想的なフォルダ構成を、Rのスクリプトでサクッと自動生成しちゃいましょう！以下のコードをRコンソールに貼り付けて実行するだけです。**プロジェクトを作成したいディレクトリに移動してから実行してください。**

``` {.r eval="FALSE," code-line-numbers="true," code-overflow="wrap"}
#' シミュレーション研究プロジェクトのフォルダ構造を自動生成する関数
#'
#' @param project_name 作成するプロジェクトのルートフォルダ名
#' @param use_renv renvパッケージを使用するかどうか (TRUE/FALSE)
#'
#' @return なし。指定されたパスにフォルダ構造を作成します。
#' @export
create_sim_project_structure_minimal <- function(project_name, use_renv = TRUE) {
  
  # プロジェクトルートのパスを設定 (現在の作業ディレクトリに作成)
  project_path <- file.path(getwd(), project_name)

  # ルートフォルダの作成
  if (dir.exists(project_path)) {
    stop(paste0("フォルダ '", project_path, "' は既に存在します。別の名前を指定するか、既存のフォルダを削除してください。"))
  }
  dir.create(project_path, recursive = TRUE)
  message(paste0("プロジェクトルートフォルダ '", project_path, "' を作成しました。\n"))
  
  # サブフォルダの定義
  # src, output, meetingの内部は日付管理されるため、ここでは親フォルダのみ作成
  sub_folders <- c(
    "000_resources", # 新規追加
    "001_data/raw",
    "002_R/functions",
    "002_R/utils",
    "003_output",
    "004_src",
    "005_scripts",
    "006_docs",
    "007_meeting",
    "008_Paper"
  )
  
  # サブフォルダの作成
  for (folder in sub_folders) {
    dir.create(file.path(project_path, folder), recursive = TRUE)
    message(paste0("  - フォルダ '", file.path(project_path, folder), "' を作成しました。\n"))
  }
  
  # renvの初期化
  if (use_renv) {
    message("renvの初期化を開始します。これには少し時間がかかる場合があります...\n")
    # 作業ディレクトリを一時的にプロジェクトルートに変更してrenvを初期化
    old_wd <- getwd()
    setwd(project_path) # ここでプロジェクトパスに移動
    tryCatch({
      if (!requireNamespace("renv", quietly = TRUE)) {
        install.packages("renv")
      }
      renv::init()
      message("  - renvを初期化しました。\n")
      message("    プロジェクトルートに '.Rprofile' と 'renv.lock' が生成されます。\n")
    }, error = function(e) {
      message(paste0("  - renvの初期化中にエラーが発生しました: ", e$message, "\n"))
      message("    手動で `renv::init()` を実行してください。\n")
    }, finally = {
      setwd(old_wd) # 元の作業ディレクトリに戻す
    })
  }
  
  message(paste0("\nプロジェクト '", project_name, "' のフォルダ構造が正常に作成されました。"))
  if (use_renv) {
    message(paste0("RStudioで '", project_name, ".Rproj' を開いた後、`renv::restore()` を実行して必要なパッケージをインストールしてください。"))
  } else {
    message(paste0("RStudioで '", project_name, ".Rproj' を開いて作業を開始してください。"))
  }
  message("\n**補足:**")
  message("  - `004_src/`, `003_output/`, `007_meeting/` フォルダ内は、ご自身で `YYYYMMDD/` 形式のサブフォルダを作成し、ファイルを整理してください。")
  message("  - `008_Paper/` フォルダ内には、論文ドラフトや関連ファイルを自由に配置してください。")
}
```

**使い方：**

1.  上記Rコードをコピーし、RStudioのコンソールに貼り付けるか、新しい `.R` ファイルとして保存します。

2.  **プロジェクトを作成したい場所に移動します**（例: `setwd("~/Your/Projects/Path")`）。

3.  コンソールで `create_sim_project_structure_minimal("任意のプロジェクト名", use_renv = TRUE)` を呼び出します。

    -   `"任意のプロジェクト名"` は、新しく作るプロジェクトのルートフォルダ名です。

    -   `use_renv = TRUE` にすると `renv` が自動的に初期化されます。もし `renv` も不要であれば、`use_renv = FALSE` に設定してください。

### 日々の運用例

-   **学習・資料収集時:**

    -   新しい統計手法の論文を読んだら、そのPDFを `000_resources/` に保存。

    -   Rの特定のパッケージの使い方を学んだら、そのメモやコード例を `000_resources/` に保存。

-   **シミュレーション実行日:**

    -   今日が2025年7月11日なら、`004_src/20250711/` フォルダを作り、その中に実行スクリプト (`01_run_sim_A.R` など) を置きます。

    -   実行結果は `003_output/20250711/` フォルダ内に保存します（例: `results/sim_A_summary.rds`, `figures/plot_A.png`）。

-   **打ち合わせ日:**

    -   2025年7月10日に指導教官と打ち合わせをしたら、`007_meeting/20250710/` フォルダを作り、議事録や資料をそこに保存します。

-   **論文執筆:**

    -   `008_Paper/` フォルダには、論文のQuartoファイルやLaTeXファイル、そして論文に含める最終的な図表などを格納します。

この自動生成テンプレートを活用して、シミュレーション研究をより効率的かつ体系的に進め、素晴らしい成果に繋げていきましょう！